[gd_scene load_steps=4 format=3 uid="uid://o8orgedo3dj3"]

[ext_resource type="Texture2D" uid="uid://d1mqh0tyjbn14" path="res://Assets/icon.svg" id="1_4ameb"]

[sub_resource type="GDScript" id="GDScript_pbqmu"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0
var loking = Vector2.RIGHT
var up = Vector2.UP

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta
	
	if is_on_floor():
		movement()

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
	
	

	move_and_slide()
	
func movement():
	
	var sentido = Input.get_axis(\"rotar_izq\",\"rotar_der\")
	rotation += 0.1 * sentido
	
	loking = Vector2.from_angle(rotation)
	up = Vector2.from_angle(rotation-1.5707)
	
	
	var direction_X =  Input.get_axis(\"ui_left\",\"ui_right\")
	var direction_Y = Input.get_axis(\"ui_down\",\"ui_up\")
	
	loking *= direction_X * SPEED
	up *= direction_Y*SPEED
	
	velocity = loking + up
	

	move_and_slide()
	
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_py1vb"]
size = Vector2(118, 109)

[node name="CharacterBody2D" type="CharacterBody2D"]
position = Vector2(559, 322)
script = SubResource("GDScript_pbqmu")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_4ameb")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -3.5)
shape = SubResource("RectangleShape2D_py1vb")
